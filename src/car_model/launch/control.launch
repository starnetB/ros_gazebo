<?xml version='1.0' encoding='UTF-8'?>
<launch>
  <arg name="robot_name"/>
  <arg name="config_file"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <!--加载节点控制器配置文件-->
  <rosparam file="$(find car_model)/config/$(arg config_file)" command="load"/>

  <!-- load controllers -->
  <!-- 启用控制器加载节点-->
  <!-- 加载文件，读取信号，并且启动相应的控制器-->
  <!-- 这一部分应该是让你控制小车的-->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
  
        output="screen" ns="/$(arg robot_name)" args="joint_state_controller 
                                                      rear_right_velocity_controller 
                                                      rear_left_velocity_controller 
                                                      front_right_steering_position_controller 
                                                      front_left_steering_position_controller"/>  <!-- 加载yaml配置中的内容-->
  <!-- 加载发布器，这一部分应该是让你定时获得小车数据的-->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
      respawn="true" output="screen">
      <remap from="/joint_states" to="/$(arg robot_name)/joint_states" />
  </node>

  <!--|转cmd中，以小车为中心的cmd-->
  <node name="cmdvel2gazebo" pkg="car_model" type="cmdvel2gazebo.py" respawn="true" output="screen"/>

  <!--给小车定位，以及速度获取等-->
  <node name="vehicle_pose_and_velocity_updater" pkg="car_model" type="vehicle_pose_and_velocity_updater.py" respawn="true" output="screen"/>

  <!---->
  <node name="transform_publisher" pkg="car_model" type="transform_publisher.py" respawn="true" output="screen"/>
</launch>
